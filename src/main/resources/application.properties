#数据源配置
#Druid会自动跟url识别驱动类名  可以不用配置
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
#初始化连接数
spring.datasource.tomcat.initial-size=5
#最小空闲数
spring.datasource.tomcat.min-idle=3
#最大空闲数  可以不用配置
#spring.datasource.tomcat.max-idle=50
#最大连接数
spring.datasource.tomcat.max-active=100
#最长等待时间 毫秒  超时等待时间以毫秒为单位 10000毫秒/1000等于10秒
spring.datasource.tomcat.max-wait=10000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.tomcat.time-between-eviction-runs-millis=60000
#连接保持空闲而不被驱逐的最长时间
spring.datasource.tomcat.min-evictable-idle-time-millis=300000
#用来检测连接是否有效的sql 不能为select * 否则sql查询时检测报错
spring.datasource.tomcat.validation-query=select * from DUAL
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.tomcat.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效 配置为true会降低性能
spring.datasource.tomcat.test-on-borrow = false
#归还连接时执行validationQuery检测连接是否有效 配置为true会降低性能
spring.datasource.tomcat.test-on-return = true
#是否缓存preparedStatement，也就是PSCache
spring.datasource.tomcat.pool-prepared-statements = true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j

#数据源配置
druid.login.enabled = true
druid.login.username = druid
druid.login.password = druid

#扫描sql文件，否则会找不到sql
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml


##控制台打印sql
logging.level.com.xh=debug

#rocketmq 配置namerServer和producerGroup：
spring.rocketmq.nameServerAddr=localhost:9876
spring.rocketmq.producer-group-name=spring-boot-test-producer-group
spring.rocketmq.consumer-group-name=spring-boot-test-consumer-group



#-------------------------------- redis properties  start --------------------------------#
# redis数据库索引(默认是0)
spring.redis.datasource=0
# redis服务器地址
spring.redis.host=127.0.0.1
# redis服务端口
spring.redis.port=6379
# redis服务器密码(默认是空)
spring.redis.password=
# 连接池最大连接数(-1表示不限制)
spring.redis.jedis.pool.max-active=8
# 连接池最小空闲连接数
spring.redis.jedis.pool.max-idle=8
# 连接池最大空闲连接数
spring.redis.jedis.pool.min-idle=0
# 最大阻塞等待时间(-1表示不限制,单位：毫秒)
spring.redis.max-wait=3000
# 连接超时时间(单位：毫秒)
spring.redis.timeout=5000
# 集群节点(三主三从)
# spring.redis.cluster.nodes=127.0.0.1:6379,127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384


